[package]
name = "mesh-raft"
version.workspace = true
authors.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
description = "Distributed consensus and policy storage for infermesh"
keywords.workspace = true
categories.workspace = true
edition.workspace = true
rust-version.workspace = true

[dependencies]
# Core dependencies
mesh-core = { path = "../mesh-core" }

# Raft consensus
raft = "0.7.0"

# Async runtime
tokio = { workspace = true, features = ["macros", "rt-multi-thread", "net", "time", "sync", "fs", "io-util"] }
async-trait = { workspace = true }

# Serialization
serde = { workspace = true, features = ["derive"] }
serde_json = { workspace = true }
bincode = { workspace = true }

# Storage
tempfile = { workspace = true }

# Error handling
thiserror = { workspace = true }
anyhow = { workspace = true }

# Tracing
tracing = { workspace = true }
slog = "2.7"

# Utilities
uuid = { workspace = true }
chrono = { workspace = true }
bytes = { workspace = true }
futures = { workspace = true }

# Concurrency
parking_lot = { workspace = true }
arc-swap = { workspace = true }

# Utilities
md5 = { workspace = true }

[dev-dependencies]
tokio-test = "0.4"
tempfile = { workspace = true }

[features]
default = []
# Enable disk persistence
persistence = []
# Enable metrics collection
metrics = []
